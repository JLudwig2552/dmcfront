swagger: '2.0'
info:
  version: 1.0.0
  title: DMC Interface Definition
  description: |
    **REST service interface definitions for DMC**
host: dmc.com
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
  - text/xml
produces:
  - application/json
  - text/html
paths:
  /user:
    get:
      tags:
        - account
      description: Get currently logged in user details
      responses:
        '200':
          description: Sends the project with projectID
          schema:
            $ref: '#/definitions/UserDetails'
  '/accounts/{accountID}':
    get:
      tags:
        - account
      description: Get account information by account id
      parameters:
        - name: accountID
          in: path
          type: string
          description: ID of the account
          required: true
      responses:
        '200':
          description: Sends the account with accountID
          schema:
            $ref: '#/definitions/UserAccount'
    put:
      tags:
      - account
      description: Update account information by account id
      parameters:
        - name: accountID
          in: path
          type: string
          description: ID of the account
          required: true
        - name: account
          in: body
          schema:
            $ref: '#/definitions/UserAccount'
      responses:
        200:
          description: returns updated User Account
          schema:
            $ref: '#/definitions/UserAccount'
  '/accounts/{accountID}/account_servers':
    get:
      tags:
        - account
      description: Get servers by account id
      parameters:
        - name: accountID
          in: path
          type: string
          description: ID of the account
          required: true
      responses:
        '200':
          description: Sends the servers by account id
          schema:
            type: array
            items:
              $ref: '#/definitions/UserAccountServer'
  '/accounts/{accountID}/account-notification-settings':
    get:
      tags:
        - account
      description: Get account notification settings by accound id
      parameters:
        - name: accountID
          in: path
          type: string
          description: ID of the account
          required: true
      responses:
        '200':
          description: Sends account notification settings by account id
          schema:
            type: array
            items:
              $ref: '#/definitions/AccountNotificationSetting'
  '/account-notification-settings/{notificationSettingID}':
    get:
      tags:
        - account
      description: Get account notification setting by id
      parameters:
        - name: notificationSettingID
          in: path
          type: string
          description: ID of the account notification
          required: true
      responses:
        '200':
          description: Sends the notification information
          schema:
            $ref: '#/definitions/AccountNotificationSetting'
    put:
      tags:
      - account
      description: Update account notification by id
      parameters:
        - name: notificationSettingID
          in: path
          type: string
          description: ID of the account notification
          required: true
        - name: userNotification
          in: body
          schema:
            $ref: '#/definitions/AccountNotificationSetting'
      responses:
        200:
          description: returns updated account notification information
          schema:
            $ref: '#/definitions/AccountNotificationSetting'
  '/account-notification-categories':
    get:
      tags:
        - account
      description: Get categories and labels for Account Notification tab
      responses:
        '200':
          description: send an array of notification categories
          schema:
            type: array
            items:
              $ref: '#/definitions/AccountNotificationCategory'
  '/account_servers':
    post:
      tags:
        - account
      description: Create a new account server
      parameters:
        - in: body
          name: AccountServer
          description: server object to be created
          required: false
          schema:
            $ref: '#/definitions/UserAccountServer'
      responses:
        '201':
          description: new server added
          schema:
            $ref: '#/definitions/UserAccountServer'
  '/account_servers/{serverID}':
    get:
      tags:
        - account
      description: Get server by server id
      parameters:
        - name: serverID
          in: path
          type: string
          description: ID of the server
          required: true
      responses:
        '200':
          description: Sends the server information
          schema:
            $ref: '#/definitions/UserAccountServer'
    put:
      tags:
      - account
      description: Update server information by server id
      parameters:
        - name: serverID
          in: path
          type: string
          description: ID of the server
          required: true
        - name: server
          in: body
          schema:
            $ref: '#/definitions/UserAccountServer'
      responses:
        200:
          description: returns updated server information
          schema:
            $ref: '#/definitions/UserAccountServer'
    delete:
      tags:
        - account
      description: Delete a server by id
      parameters:
        - in: path
          name: serverID
          description: ID of server to be deleted
          required: true
          type: string
      responses:
        '200':
          description: OK
  /projects:
    get:
      tags:
        - project
      description: Get all user projects
      responses:
        '200':
          description: return array of projects
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
    post:
      tags:
        - project
      description: Post a new project to store in the database
      operationId: postProject
      parameters:
        - in: body
          name: body
          description: Project object to be added to the database
          required: false
          schema:
            $ref: '#/definitions/Project'
      responses:
        '405':
          description: Invalide input
  '/projects/{projectID}':
    get:
      tags:
        - project
        - project.php
      summary: Get project information by project id
      description: Get information about a project...
      operationId: findProjectByID
      parameters:
        - name: projectID
          in: path
          type: string
          description: ID of the project
          required: true
      responses:
        '200':
          description: Sends the project with projectID
          schema:
            $ref: '#/definitions/Project'
  '/projects/{projectID}/following_discussions':
    get:
      tags:
        - project
        - discussion
      description: Get all project discussions being followed
      parameters:
        - name: projectID
          in: path
          type: string
          description: ID of the project
          required: true
      responses:
        '200':
          description: return all project discussions being followed
          schema:
            type: array
            items:
              $ref: '#/definitions/Discussion'
  /tasks/create:
    post:
      tags:
        - task
      summary: Post a new task
      description: Post a new task to store in the database
      operationId: postTask
      parameters:
        - in: body
          name: body
          description: Task object to be added to the database
          required: false
          schema:
            $ref: '#/definitions/Task'
      responses:
        '405':
          description: Invalide input
  '/tasks/{taskID}':
    get:
      tags:
        - task
      summary: Get task information by task id
      description: Get information about a task...
      operationId: findTaskByID
      parameters:
        - name: taskID
          in: path
          type: string
          description: ID of the task
          required: true
      responses:
        '200':
          description: send the task with taskID
          schema:
            $ref: '#/definitions/Task'
  /services:
    post:
      tags:
        - service
      summary: Post a new service
      description: Post a new service to store in the database
      operationId: postService
      parameters:
        - in: body
          name: body
          description: Service object to be added to the database
          required: false
          schema:
            $ref: '#/definitions/Service'
      responses:
        '405':
          description: Invalide input
  '/services/{serviceID}':
    get:
      tags:
        - service
      summary: Get information for a service
      description: Get information about a service...
      operationId: findServiceByID
      parameters:
        - name: serviceID
          in: path
          type: string
          description: ID of the service
          required: true
      responses:
        '200':
          description: send the service with serviceID
          schema:
            $ref: '#/definitions/Service'
  '/service/{serviceID}/specifications':
    post:
      tags:
        - service
        - specification
      operationId: postServiceSpecification
      parameters:
        - name: serviceID
          in: path
          type: string
          description: ID of the service
          required: true
        - in: body
          name: body
          description: body of specification
          required: true
          schema:
            $ref: '#/definitions/ServiceSpecification'
      responses:
        '200':
          description: post specification for service
  /components:
    post:
      tags:
        - component
      summary: Post a new component
      description: Post a new component to store in the database
      operationId: postComponent
      parameters:
        - in: body
          name: body
          description: Component object to be added to the database
          required: false
          schema:
            $ref: '#/definitions/Component'
      responses:
        '405':
          description: Invalide input
  '/components/{componentID}':
    get:
      tags:
        - component
      summary: Get information for a component
      description: Get specification for a component based on componentID
      operationId: getComponentByServiceID
      parameters:
        - name: componentID
          in: path
          type: string
          description: ID of the component
          required: true
      responses:
        '200':
          description: send the component with componentID
          schema:
            $ref: '#/definitions/Component'
  '/popular_discussions':
    get:
      tags:
        - discussion
      description: Get popular discussions
      responses:
        '200':
          description: return popular discussions
          schema:
            type: array
            items:
              $ref: '#/definitions/Discussion'
  '/follow_people_discussions':
    get:
      tags:
        - discussion
      description: Get discussion of people being followed
      responses:
        '200':
          description: return discussions of people being
          schema:
            type: array
            items:
              $ref: '#/definitions/Discussion'
  '/following_discussions':
    get:
      tags:
        - discussion
        - dashboard.php
      description: Get discussion being followed
      responses:
        '200':
          description: return discussons being followed
          schema:
            type: array
            items:
              $ref: '#/definitions/Discussion'
  '/discussions':
    get:
      tags:
        - discussion
      description: Get all user relalted discussion
      responses:
        '200':
          description: return all user relalted discussion
          schema:
            type: array
            items:
              $ref: '#/definitions/Discussion'
  /discussions/create:
    post:
      tags:
        - discussion
      summary: Post a new discussion
      description: Post a new discussion to store in the database
      operationId: postDiscussion
      parameters:
        - in: body
          name: body
          description: Discussion object to be added to the database
          required: false
          schema:
            $ref: '#/definitions/Discussion'
      responses:
        '405':
          description: Invalide input
  '/discussions/{discussionID}':
    get:
      tags:
        - discussion
      description: Get discussion based on discussionID
      operationId: getDiscussionByDiscussionID
      parameters:
        - name: discussionID
          in: path
          type: string
          description: ID of the discussion
          required: true
      responses:
        '200':
          description: send the discussion with discussionID
          schema:
            $ref: '#/definitions/Discussion'
  '/profiles/{profileID}':
    get:
      tags:
        - profile
      summary: Get information for a member profile
      description: Get profile based on profileID
      parameters:
        - name: profileID
          in: path
          type: string
          description: ID of the profile
          required: true
      responses:
        '200':
          description: send the profile with profileID
          schema:
            $ref: '#/definitions/Profile'
  '/profiles/{profileID}/profile_reviews':
    get:
      tags:
        - profile
      summary: Get reviews for a member profile
      description: Get profile reviews based on profileID
      parameters:
        - name: profileID
          in: path
          type: string
          description: ID of the profile
          required: true
      responses:
        '200':
          description: send the reviews with profileID
          schema:
            type: array
            items:
              $ref: '#/definitions/ProfileReview'
  '/companies/{companyID}':
    get:
      tags:
        - company
      summary: Get information for a company profile
      description: Get profile based on companyID
      parameters:
        - name: companyID
          in: path
          type: string
          description: ID of the company
          required: true
      responses:
        '200':
          description: send the company profile with companyID
          schema:
            $ref: '#/definitions/Company'
    put:
      tags:
      - company
      description: Update information for company profile by ID
      parameters:
        - name: companyID
          in: path
          type: string
          description: ID of the company
          required: true
        - name: company
          in: body
          schema:
            $ref: '#/definitions/Company'
      responses:
        200:
          description: returns updated company profile
          schema:
            $ref: '#/definitions/Company'
  '/companies/{companyID}/company_images':
    get:
      tags:
        - company
      summary: Get company profile images
      description: Get company profile images based on companyID
      parameters:
        - name: companyID
          in: path
          type: string
          description: ID of the company
          required: true
      responses:
        '200':
          description: send the profile images with companyID
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyImage'
  '/company_images/{imageID}':
    put:
      tags:
      - company
      description: Update company image by ID
      parameters:
        - name: imageID
          in: path
          type: string
          description: ID of the company image
          required: true
        - name: image
          in: body
          schema:
            $ref: '#/definitions/CompanyImage'
      responses:
        200:
          description: returns updated company image
          schema:
            $ref: '#/definitions/CompanyImage'
  '/companies/{companyID}/company_videos':
    get:
      tags:
        - company
      summary: Get company profile videos
      description: Get company profile videos based on companyID
      parameters:
        - name: companyID
          in: path
          type: string
          description: ID of the company
          required: true
      responses:
        '200':
          description: send the profile videos with companyID
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyVideo'
  '/companies/{companyID}/company_skills':
    get:
      tags:
        - company
      summary: Get company profile skill
      description: Get company profile skill based on companyID
      parameters:
        - name: companyID
          in: path
          type: string
          description: ID of the company
          required: true
      responses:
        '200':
          description: send the profile skill with companyID
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanySkill'
  '/companies/{companyID}/company_key_contacts':
    get:
      tags:
        - company
      summary: Get company profile contacts
      description: Get company profile contacts based on companyID
      parameters:
        - name: companyID
          in: path
          type: string
          description: ID of the company
          required: true
      responses:
        '200':
          description: send the profile contacts with companyID
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyKeyContact'
  '/companies/{companyID}/company_skill_images':
    get:
      tags:
        - company
      summary: Get company profile skill images
      description: Get company profile skill images based on companyID
      parameters:
        - name: companyID
          in: path
          type: string
          description: ID of the company
          required: true
      responses:
        '200':
          description: send the profile skill images with companyID
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanySkillImage'
  '/company_skill_images/{imageID}':
    put:
      tags:
      - company
      description: Update company skill image by ID
      parameters:
        - name: imageID
          in: path
          type: string
          description: ID of the company skill image
          required: true
        - name: image
          in: body
          schema:
            $ref: '#/definitions/CompanySkillImage'
      responses:
        200:
          description: returns updated company skill image
          schema:
            $ref: '#/definitions/CompanySkillImage'
  '/companies/{companyID}/company_reviews':
    get:
      tags:
        - company
      summary: Get reviews for a company
      description: Get company reviews based on companyID
      parameters:
        - name: companyID
          in: path
          type: string
          description: ID of the company
          required: true
      responses:
        '200':
          description: send the reviews with companyID
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyReview'
  '/companies/{companyID}/company_services':
    get:
      tags:
        - company
        - service
      description: Get company services based on companyID
      parameters:
        - name: companyID
          in: path
          type: string
          description: ID of the company
          required: true
      responses:
        '200':
          description: send the services with companyID
          schema:
            type: array
            items:
              $ref: '#/definitions/Service'
  '/companies/{companyID}/company_components':
    get:
      tags:
        - company
        - component
      description: Get company components based on companyID
      parameters:
        - name: companyID
          in: path
          type: string
          description: ID of the company
          required: true
      responses:
        '200':
          description: send the components with companyID
          schema:
            type: array
            items:
              $ref: '#/definitions/Component'
  '/companies/{companyID}/company_featured':
    get:
      tags:
        - company
      summary: Get featured products for a company
      description: Get company featured products based on companyID
      parameters:
        - name: companyID
          in: path
          type: string
          description: ID of the company
          required: true
      responses:
        '200':
          description: send an object with featured products based on companyID
          schema:
            type: object
            properties:
              totalCount:
                type: integer
              services:
                type: array
                items:
                  $ref: '#/definitions/ServiceFeatured'
              components:
                type: array
                items:
                  $ref: '#/definitions/ComponentFeatured'
  /company_skills:
    post:
      tags:
        - company
      summary: Post a new company skill
      description: Post a new company skill
      parameters:
        - in: body
          name: CompanySkill
          description: skill object to be added to the database
          required: false
          schema:
            $ref: '#/definitions/CompanySkill'
      responses:
        '201':
          description: new skill added to the database
          schema:
            $ref: '#/definitions/CompanySkill'
  '/company_skills/{skillID}':
    delete:
      tags:
        - company
      description: Delete a skill by id
      parameters:
        - in: path
          name: skillID
          description: ID of skill to be deleted
          required: true
          type: string
      responses:
        '200':
          description: OK
  /company_videos:
    post:
      tags:
        - company
      summary: Post a new company video
      description: Post a new company video
      parameters:
        - in: body
          name: body
          description: Video object to be added to the database
          required: false
          schema:
            $ref: '#/definitions/CompanyVideo'
      responses:
        '201':
          description: new video added to the database
          schema:
            $ref: '#/definitions/CompanyVideo'
  '/company_videos/{videoID}':
    delete:
      tags:
        - company
      description: Delete a video by id
      parameters:
        - in: path
          name: videoID
          description: ID of video to be deleted
          required: true
          type: string
      responses:
        '200':
          description: OK
    put:
      tags:
      - company
      description: Update company videos by ID
      parameters:
        - name: videoID
          in: path
          type: string
          description: ID of the company video
          required: true
        - name: video
          in: body
          schema:
            $ref: '#/definitions/CompanyVideo'
      responses:
        200:
          description: returns updated company video
          schema:
            $ref: '#/definitions/CompanyVideo'
  /company_key_contacts:
    post:
      tags:
        - company
      summary: Post a new company contact
      description: Post a new company contact
      parameters:
        - in: body
          name: body
          description: contact object to be added to the database
          required: false
          schema:
            $ref: '#/definitions/CompanyKeyContact'
      responses:
        '201':
          description: new contact added to the database
          schema:
            $ref: '#/definitions/CompanyKeyContact'
  '/company_key_contacts/{contactID}':
    delete:
      tags:
        - company
      description: Delete a contact by id
      parameters:
        - in: path
          name: contactID
          description: ID of contact to be deleted
          required: true
          type: string
      responses:
        '200':
          description: OK
    put:
      tags:
      - company
      description: Update company contact by ID
      parameters:
        - name: contactID
          in: path
          type: string
          description: ID of the company contact
          required: true
        - name: contact
          in: body
          schema:
            $ref: '#/definitions/CompanyKeyContact'
      responses:
        200:
          description: returns updated company contact
          schema:
            $ref: '#/definitions/CompanyKeyContact'
  '/market/popular_services':
    get:
      tags:
        - service
        - marketplace
      description: Get popular services in marketplace
      responses:
        '200':
          description: return popular services in marketplace
          schema:
            type: array
            items:
              $ref: '#/definitions/Service'
  '/market/new_services':
    get:
      tags:
        - service
        - marketplace
      description: Get latest services in marketplace
      responses:
        '200':
          description: return latest services in marketplace
          schema:
            type: array
            items:
              $ref: '#/definitions/Service'
  '/market/services':
    get:
      tags:
        - service
        - marketplace
      description: Get all services in marketplace
      responses:
        '200':
          description: return all services in marketplace
          schema:
            type: array
            items:
              $ref: '#/definitions/Service'
  '/market/components':
    get:
      tags:
        - service
        - marketplace
      description: Get all components in marketplace
      responses:
        '200':
          description: return all components in marketplace
          schema:
            type: array
            items:
              $ref: '#/definitions/Component'
definitions:
  FeatureImage:
    type: object
    properties:
      thumbnail:
        type: string
      large:
        type: string
  Tasks:
    type: object
    properties:
      totalItems:
        type: integer
      link:
        type: string
        description: it contains /projects/{projectID}/tasks, URL that returns JSON data of all project tasks.
  Discussions:
    type: object
    properties:
      totalItems:
        type: integer
      link:
        type: string
        description: it contains /projects/{projectID}/discussions, URL that returns JSON data for project specific blog discussion and live stream (e.g. anytime a service is ran, any new discussion, new services added, etc.)
  Services:
    type: object
    properties:
      totalItems:
        type: integer
      link:
        type: string
        description: it contains /project/{projectID}/services, URL that returns JSON data of all services in a project.
  Components:
    type: object
    properties:
      totalItems:
        type: integer
      link:
        type: string
        description: it contains /project/{projectID}/components, URL that returns JSON data of all components of the project.
  Project:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      projectManager:
        type: string
      featureImage:
        $ref: '#/definitions/FeatureImage'
      images:
        type: string
      description:
        type: string
      tasks:
        $ref: '#/definitions/Tasks'
      discussions:
        $ref: '#/definitions/Discussions'
      services:
        $ref: '#/definitions/Services'
      components:
        $ref: '#/definitions/Components'
  SimplifiedProject:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
  Task:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      project:
        $ref: '#/definitions/SimplifiedProject'
      assignee:
        type: string
      reporter:
        type: string
      dueDate:
        type: string
        format: date-time
      priority:
        type: string
        format: date-time
  CurrentStatus:
    type: object
    properties:
      percentCompleted:
        type: number
      startDate:
        type: string
        format: date
      startTime:
        type: string
        format: time
      project:
        $ref: '#/definitions/SimplifiedProject'
  Service:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      description:
        type: string
      owner:
        type: string
      releaseDate:
        type: string
        format: date-time
      serviceType:
        type: string
      tags:
        type: array
        items:
          type: string
      specifications:
        type: string
      featureImage:
        $ref: '#/definitions/FeatureImage'
      currentStatus:
        $ref: '#/definitions/CurrentStatus'
      projectId:
        type: string
      from:
        type: string
  ServiceFeatured:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      description:
        type: string
      owner:
        type: string
      releaseDate:
        type: string
        format: date-time
      serviceType:
        type: string
      tags:
        type: array
        items:
          type: string
      specifications:
        type: string
      featureImage:
        $ref: '#/definitions/FeatureImage'
      currentStatus:
        $ref: '#/definitions/CurrentStatus'
      projectId:
        type: string
      from:
        type: string
      type:
        type: string
      favorite:
        type: boolean
      featureId:
        type: string
      position:
        type: integer
      inFeatured:
        type: boolean
  RunStats:
    type: object
    properties:
      success:
        type: number
      fail:
        type: number
  UsageStats:
    type: object
    properties:
      added:
        type: number
      members:
        type: number
  ServiceSpecification:
    type: object
    properties:
      id:
        type: string
      serviceId:
        type: string
      description:
        type: string
      input:
        type: number
      output:
        type: number
      usageStats:
        $ref: '#/definitions/UsageStats'
      runStats:
        $ref: '#/definitions/RunStats'
  Component:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      description:
        type: string
      owner:
        type: string
      releaseDate:
        type: string
        format: date-time
      tags:
        type: array
        items:
          type: string
      featureImage:
        $ref: '#/definitions/FeatureImage'
      services:
        type: array
        items:
          $ref: '#/definitions/Service'
      projectId:
        type: string
      type:
        type: string
  ComponentFeatured:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      description:
        type: string
      owner:
        type: string
      releaseDate:
        type: string
        format: date-time
      tags:
        type: array
        items:
          type: string
      featureImage:
        $ref: '#/definitions/FeatureImage'
      services:
        type: array
        items:
          $ref: '#/definitions/Service'
      projectId:
        type: string
      type:
        type: string
      favorite:
        type: boolean
      featureId:
        type: string
      position:
        type: integer
      inFeatured:
        type: boolean
  Discussion:
    type: object
    properties:
      id:
        type: string
      text:
        type: string
      full_name:
        type: string
      create_at:
        type: string
        format: date-time
      avatar:
        type: string
      projectID:
        type: string
  Profile:
    type: object
    properties:
      id:
        type: string
      displayName:
        type: string
      company:
        type: string
      jobTitle:
        type: string
      phone:
        type: string
      email:
        type: string
      location:
        type: string
      image:
        type: string
      description:
        type: string
      skills:
        type: array
        items:
          type: string
  ProfileReview:
    type: object
    properties:
      id:
        type: string
      profileId:
        type: string
      name:
        type: string
      reply:
        type: boolean
      reviewId:
        type: string
      status:
        type: boolean
      date:
        type: string
      rating:
        type: integer
      userRatingReview:
        type: object
      like:
        type: integer
      dislike:
        type: integer
      comment:
        type: string
  Company:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      name:
        type: string
      location:
        type: string
      description:
        type: string
      division:
        type: string
      industry:
        type: string
      NAICSCode:
        type: string
      RDFocus:
        type: string
      customers:
        type: string
      awardsReceived:
        type: string
      technicalExpertise:
        type: string
      toolsSoftwareEquipmentMachines:
        type: string
      postCollaborations:
        type: string
      collaborationInterests:
        type: string
      pastProjects:
        type: string
      upcomingProjectInterests:
        type: string
      address:
        type: string
      city:
        type: string
      state:
        type: integer
      zipCode:
        type: string
      twitter:
        type: string
      linkedIn:
        type: string
      website:
        type: string
      methodCommunication:
        type: string
      email:
        type: string
      phone:
        type: string
      categoryTier:
        type: integer
      dateJoined:
        type: string
      reasonJoining:
        type: string
      featureImage:
        $ref: "#/definitions/FeatureImage"
      logoImage:
        type: string
      follow:
        type: boolean
      favoritesCount:
        type: integer
      isOwner:
        type: boolean
      owner:
        type: object
  CompanyReview:
    type: object
    properties:
      id:
        type: string
      companyId:
        type: string
      name:
        type: string
      reply:
        type: boolean
      reviewId:
        type: string
      status:
        type: boolean
      date:
        type: string
      rating:
        type: integer
      userRatingReview:
        type: object
      like:
        type: integer
      dislike:
        type: integer
      comment:
        type: string
  CompanyImage:
    type: object
    properties:
      id:
        type: string
      companyId:
        type: string
      url:
        type: string
      title:
        type: string
  CompanyVideo:
    type: object
    properties:
      id:
        type: string
      companyId:
        type: string
      title:
        type: string
      link:
        type: string
  CompanySkillImage:
    type: object
    properties:
      id:
        type: string
      companyId:
        type: string
      url:
        type: string
      title:
        type: string
  CompanySkill:
    type: object
    properties:
      id:
        type: string
      companyId:
        type: string
      name:
        type: string
  CompanyKeyContact:
    type: object
    properties:
      id:
        type: string
      companyId:
        type: string
      type:
        type: integer
      name:
        type: string
      phoneNumber:
        type: string
      title:
        type: string
      email:
        type: string
  ProjectDocument:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      projectId:
        type: string
      modifed:
        type: string
        format: date
      size:
        type: string
      owner:
        type: string
      file:
        type: string
  NotificationsListItem:
    type: object
    properties:
      title:
        type: string
      link:
        type: string
  RunningServicesListItem:
    type: object
    properties:
      title:
        type: string
      serviceId:
        type: string
      projectId:
        type: string
  MessagesListItem:
    type: object
    properties:
      title:
        type: string
      link:
        type: string
  UserDetails:
    type: object
    properties:
      displayName:
        type: string
      accountId:
        type: string
      profileId:
        type: string
      companyId:
        type: string
      role:
        type: string
      notifications:
        type: object
        properties:
          total:
            type: integer
          items:
            type: array
            items:
              $ref: '#/definitions/NotificationsListItem'
      runningServices:
        type: object
        properties:
          total:
            type: integer
          items:
            type: array
            items:
              $ref: '#/definitions/RunningServicesListItem'

      messages:
        type: object
        properties:
          total:
            type: integer
          items:
            type: array
            items:
              $ref: '#/definitions/MessagesListItem'
  UserAccountPrivacy:
    type: object
    properties:
      email:
        $ref: '#/definitions/UserAccountPrivacyItem'
      phone:
        $ref: '#/definitions/UserAccountPrivacyItem'
      location:
        $ref: '#/definitions/UserAccountPrivacyItem'
  UserAccountPrivacyItem:
    type: object
    properties:
      enable:
        type: boolean
      value:
        type: string
  UserAccount:
    type: object
    properties:
      id:
        type: string
      companyId:
        type: string
      profileId:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      displayName:
        type: string
      email:
        type: string
      deactivated:
        type: boolean
      location:
        type: string
      timezone:
        type: string
      privacy:
        type: object
        properties:
          public:
            $ref: '#/definitions/UserAccountPrivacy'
          private:
            $ref: '#/definitions/UserAccountPrivacy'
  UserAccountServer:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      name:
        type: string
      ip:
        type: string
      status:
        type: string
  AccountNotificationCategoryItem:
    type: object
    properties:
      id:
        type: string
      account-notification-categoryId:
        type: string
      title:
        type: string
  AccountNotificationCategory:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      position:
        type: number
      account-notification-category-items:
        type: array
        items:
          $ref: '#/definitions/AccountNotificationCategoryItem'
  AccountNotificationSetting:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      section:
        type: string
        enum: ['website', 'email']
      account-notification-category-itemId:
        type: string
      selected:
        type: boolean